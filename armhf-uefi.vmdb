# This is a sample VMDB2 input file that specifies a simple system for
# an armhf machine that boots with UEFI.

steps:
  - mkimg: "{{ output }}"
    size: 4G

  - mklabel: gpt
    device: "{{ output }}"

  - mkpart: primary
    device: "{{ output }}"
    start: 0%
    end: 1G
    tag: efi

  - mkpart: primary
    device: "{{ output }}"
    start: 1G
    end: 100%
    tag: /

  - kpartx: "{{ output }}"

  - mkfs: vfat
    partition: efi

  - mkfs: ext4
    partition: /

  - mount: /

  # Using the virtual-filesystems plugin here upsets qemu-debootstrap,
  # which ends up unable to create /dev/fd within the chroot, causing
  # the qemu-debootstrap phase to fail. Until we get to the bottom
  # that, don't enable the plugin.
  #- virtual-filesystems: /

  - unpack-rootfs: /

  - qemu-debootstrap: buster
    arch: armhf
    mirror: http://deb.debian.org/debian
    target: /
    unless: rootfs_unpacked

  - apt: install
    packages:
      - linux-image-armmp-lpae
    fs-tag: /
    unless: rootfs_unpacked

  - cache-rootfs: /
    unless: rootfs_unpacked

  - chroot: /
    shell: |
      sed -i '/^root:[^:]*:/s//root::/' /etc/passwd 
      echo armhf-uefi-vmdb2 > /etc/hostname

  - grub: uefi
    tag: /
    efi: efi
    console: serial
